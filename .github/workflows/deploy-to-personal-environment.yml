name: Deploy to personal dev environment
concurrency: local development

on:
  push:
    branches:
      - feature/*
      - bugfix/*
      - hotfix/*

env:
  host_url: ${{ secrets.PTERODACTYL_HOST }}
  api_key: ${{ secrets.PTERODACTYL_API_KEY }}
  server_ids: ${{ secrets.PTERODACTYL_SERVER_IDS }}
  vip_person: waddlespam

jobs:
  evaluate_target:
    if: "!startsWith(github.event.head_commit.message, 'Merge')" # Only deploy if the push is not triggered by a merge action
    environment: local development
    runs-on: ubuntu-latest
    outputs:
      server_id: ${{ steps.set-id.outputs.SERVER_ID }}
    steps:
      - name: Evaluate target server
        id: set-id
        run: |
          SERVER_ID=$(echo '${{ env.server_ids }}' | jq -r '."${{ env.vip_person }}"')
          echo "SERVER_ID=$SERVER_ID"
          echo "SERVER_ID=$SERVER_ID" >> "$GITHUB_OUTPUT"

  stop_server:
    environment: local development
    runs-on: ubuntu-latest
    needs:
      - evaluate_target
    steps:
      - name: Stop local server
        run: |
          curl "${{ env.host_url }}/api/client/servers/${{ needs.evaluate_target.outputs.server_id }}/power" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ env.api_key }}' \
          -X POST \
          -d '{"signal":"stop"}'

  deploy:
    environment: local development
    runs-on: ubuntu-latest
    needs:
      - evaluate_target
      - stop_server
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 22
          distribution: temurin
          cache: gradle

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build project
        run: ./gradlew buildNeeded -x test

      - name: Upload artifact into personal dev environment
        uses: rexlManu/pterodactyl-upload-action@v2.4
        with:
          panel-host: ${{ env.host_url }}
          api-key: ${{ env.api_key }}
          server-id: ${{ needs.evaluate_target.outputs.server_id }}
          source: build/libs/*-deploy.jar
          target: /plugins/
          restart: true

  start_server:
    environment: local development
    runs-on: ubuntu-latest
    needs:
      - evaluate_target
      - deploy
    steps:
      - name: Start local server
        run: |
          curl "${{ env.host_url }}/api/client/servers/${{ needs.evaluate_target.outputs.server_id }}/power" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ env.api_key }}' \
          -X POST \
          -d '{"signal":"start"}'